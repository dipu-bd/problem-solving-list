function doLogin(e,t){homepage.apiClient.login(e,t,function(e,t,o){return e?(homepage.apiClient.set("token",null),alert(e.message||"Could not log in")):(homepage.loggedIn=!0,homepage.client=o._data,void homepage.$apply())})}function doLogout(){homepage.apiClient.logoutAndDestroyToken(homepage.client.username,null,null,function(e,t){return e?alert(e.message||"Could not log out"):(homepage.apiClient.set("token",null),homepage.loggedIn=!1,void homepage.$apply())})}function getProblems(){setTimeout(function(){var e=$("#refresh-button");e.attr("disabled",!0);var t={endpoint:PROBLEMS_TYPE,qs:{limit:1e8}};homepage.apiClient.request(t,function(t,o){if(e.attr("disabled",!1),t);else{if(o.timestamp<lastResponseTime)return;lastResponseTime=o.timestamp,homepage.categoryData={},homepage.problems=o.entities,homepage.problems.forEach(function(e){formatProblem(e),e.category&&(categoryData[e.category]=e.category)}),homepage.categories=Object.getOwnPropertyNames(categoryData),homepage.$apply()}})},10)}function addProblem(e){var t=$("#add-button");t.attr("disabled",!0),setTimeout(function(){validatePROB(e)&&(formatProblem(e),e.type=PROBLEMS_TYPE,homepage.apiClient.createEntity(e,function(e,o){if(t.attr("disabled",!1),e)return alert(e.message||"Error - there was a problem creating the entity");var r=$("#add-problem");r.modal("hide"),r.find("form")[0].reset(),getProblems()}))},10)}function deleteProblem(e){if(confirm("Are your sure to delete this problem?")){var t=$("#delete-"+e.uuid);t.attr("disabled",!0),setTimeout(function(){var o={client:homepage.apiClient,data:{type:PROBLEMS_TYPE,uuid:e.uuid}},r=new Apigee.Entity(o);r.destroy(function(e,o){return e?(t.attr("disabled",!1),alert(e.message||"Error - there was a problem deleting the entity")):void getProblems()})},10)}}function updateUser(){homepage.loggedIn=homepage.apiClient.isLoggedIn(),setTimeout(function(){homepage.apiClient.getLoggedInUser(function(e,t,o){homepage.client=o._data||{},homepage.$apply()})},0)}function canShow(e){if(homepage.selectedCat&&e.category!=homepage.selectedCat)return!1;if(homepage.filterText){var t=homepage.filterText.toLowerCase().trim(),o=e.name+" "+e.link+" "+e.category;return o=o.toLowerCase().trim(),o.search(t)>=0}return!0}function sortBy(e){homepage.problems.sort(function(t,o){return t[e]<o[e]?-1:t[e]>o[e]}),homepage.sortedBy=e}var problemListApp=angular.module("ProblemListApp",[]),LOGGING=!0,PROBLEMS_TYPE="problems",homepage={},categoryData={},lastResponseTime=0,clientOptions={orgName:"sdipu",appName:"problemsolvinglist",logging:LOGGING};!function(){problemListApp.controller("HomePageController",["$scope",function(e){homepage=e,homepage.problem={},homepage.problems=[],homepage.categories=[],homepage.selectedCat="",homepage.filterText="",homepage.apiClient=new Apigee.Client(clientOptions),getProblems(),updateUser(),homepage.sortBy=sortBy,homepage.canShow=canShow,homepage.doLogin=doLogin,homepage.doLogout=doLogout,homepage.deleteProblem=deleteProblem,homepage.addProblem=addProblem,homepage.loadProblems=getProblems,homepage.setCategory=function(e){homepage.selectedCat=e},homepage.clearFilter=function(){homepage.filterText=""}}]),problemListApp.directive("navBar",function(){return{restrict:"E",templateUrl:"views/navbar.html"}}),problemListApp.directive("problemList",function(){return{restrict:"E",templateUrl:"views/problem-list.html"}}),problemListApp.directive("bottomBar",function(){return{restrict:"E",templateUrl:"views/bottom.html"}}),problemListApp.directive("addProblems",function(){return{restrict:"E",templateUrl:"views/add-problems.html"}}),problemListApp.directive("searchProblem",function(){return{restrict:"E",templateUrl:"views/search-problems.html"}}),problemListApp.directive("loginForm",function(){return{restrict:"E",templateUrl:"views/login-form.html"}}),problemListApp.directive("problemToolbar",function(){return{restrict:"E",templateUrl:"views/problem-toolbar.html"}})}();